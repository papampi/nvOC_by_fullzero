#!/bin/bash
# whttomine.com auto switch for nvOC by fullzero , v0019.2 unofficial by papampi

#Feel free to use, change, edit and do what you want with it.

source /home/m1/1bash

# Creating a log file to record coin switch
LOG_FILE="/home/m1/nvoc_logs/8_wtmautoswitchlog"
if [ -e "$LOG_FILE" ] ; then
  #Limit the logfile, just keep the last 5K
  echo "$(cat $LOG_FILE | grep switched | tail -n 5k)" > $LOG_FILE
fi

WTM_HISTORY="/home/m1//WTM_switch_history"
if [ -e "$WTM_HISTORY" ] ; then
  #Limit the logfile, just keep the last 2K
  echo "$(cat $WTM_HISTORY | grep switched | tail -n 2k)" > $WTM_HISTORY
fi

while true
do

  if [ $AUTO_START_MINER == "YES" ]
  then

    python2.7 '/home/m1/WTM_AUTO_SWITCH' /home/m1/WTM.json  | tee -a $LOG_FILE
    sleep 5

    CURRENT_COIN=$(head -n 150 /home/m1/1bash | grep COIN= | sed 's/COIN=//' | sed 's/\"//' | sed 's/\"//')
    TOP_COIN=$(cat /home/m1/WTM_top_coin | grep : | sed 's/:[0-9][0-9]//' | sed 's/[0-9]//')
    #TOP_COIN=$(cat /home/m1/top_coin)
    TIMEIN=$WTM_AUTO_SWITCH_SYNC_INTERVAL
    TIMEOUT=$(($TIMEIN * 60))

    if [ "$CURRENT_COIN" != "$TOP_COIN" ]
    then
      sed -i 's/'COIN=\"$CURRENT_COIN\"'/'COIN=\"$TOP_COIN\"/'' /home/m1/1bash
      cat /home/m1/WTM_current_revenue | grep `cat /home/m1/WTM_top_coin | awk -F: '{print $1}'` | awk -F: '{print $2}' >> /home/m1/WTM_24H_REV
      SYNC_COUNT=$((`expr 1440 / $WTM_AUTO_SWITCH_SYNC_INTERVAL`))
      echo "$(tail -$SYNC_COUNT WTM_24H_REV)" > /home/m1/WTM_24H_REV
      sed -i '/^$/d' /home/m1/WTM_24H_REV
      sleep 1
      MINER_PID=$(ps ax | grep -i screen | grep miner)

      while [ -z  "$MINER_PID" ]
      do
        echo "miner not started yet" | tee -a $LOG_FILE $ALERT_LOG_FILE
        sleep 5
      done

      if [ -n  "$MINER_PID" ]
      then
        echo "miner is running, lets make the switch" | tee -a $LOG_FILE
        #kill miner
        pkill -e miner
        if [ $IAmNotAJeep_and_Maxximus007_WATCHDOG == "YES" ]
        then
          #restart wdog
          pkill -f IAmNotAJeep_and_Maxximus007_WATCHDOG
          sleep 1
          screen -dmS wdog bash /home/m1/IAmNotAJeep_and_Maxximus007_WATCHDOG
          echo ""
          echo "wdog restarted in screen wdog; attach with: screen -r wdog"
          echo ""
        fi

        if [ $damNmad_ALGO_SPECIFIC_OC == "YES" ] && [ $INDIVIDUAL_CLOCKS == "NO" ]
        then

          if [ $Maxximus007_AUTO_TEMPERATURE_CONTROL == "YES" ] && [ $INDIVIDUAL_POWERLIMIT == "NO" ]
          then
            pkill -f Maxximus007_AUTO_TEMPERATURE_CONTROL
            sleep 1
            screen -dmS temp bash /home/m1/Maxximus007_AUTO_TEMPERATURE_CONTROL
            echo ""
            echo "temp control restarted in screen temp; attach with: screen -r temp"
            echo ""
          fi

          GPUS=$(nvidia-smi -i 0 --query-gpu=count --format=csv,noheader,nounits)
          NVD=nvidia-settings

          if [ $P106_100_FULL_HEADLESS_MODE == "NO" ]
          then
            gpu=0
            while [ $gpu -lt $GPUS ]
            do
              for j in $TI
              do
                CORE=${__CORE_OVERCLOCK[${gpu}]}
                MEM=${MEMORY_OVERCLOCK[${gpu}]}
                ${NVD} -a [gpu:$gpu]/GPUGraphicsClockOffset[${j}]=$CORE
                ${NVD} -a [gpu:$gpu]/GPUMemoryTransferRateOffset[${j}]=$MEM
              done
              gpu=$(($gpu+1))
            done
          fi

          if [ $P106_100_FULL_HEADLESS_MODE == "YES" ]
          then
            ${NVD} -a GPUGraphicsClockOffset[2]=${__CORE_OVERCLOCK}
            ${NVD} -a GPUMemoryTransferRateOffset[2]=${MEMORY_OVERCLOCK}
          fi

        fi
        #start new miner
        bash /home/m1/0miner
        echo "miner started with:" | tee -a $LOG_FILE
        echo $( ps ax | grep -i screen | grep -o 'miner.*' ) | tee -a $LOG_FILE
        echo "process in screen miner; attach with: screen -r miner"
        echo ""
        echo "$(date) Mining switched from $CURRENT_COIN to $TOP_COIN" | tee -a $LOG_FILE $WTM_HISTORY
        echo "Check again in $TIMEOUT seconds" #| tee -a $LOG_FILE

      else
        echo "miner not started yet, lets wait for it to switch" # | tee -a $LOG_FILE
      fi

      sleep $TIMEOUT
    else
      echo ""
      echo "$(date) Same Coin on Top, Continue mining $CURRENT_COIN"  # | tee -a $LOG_FILE
      echo "Check again in $TIMEOUT seconds" #| tee -a $LOG_FILE
      sleep 1
      cat /home/m1/WTM_current_revenue | grep `cat /home/m1/WTM_top_coin | awk -F: '{print $1}'` | awk -F: '{print $2}' >> /home/m1/WTM_24H_REV
      SYNC_COUNT=$((`expr 1440 / $WTM_AUTO_SWITCH_SYNC_INTERVAL`))
      echo "$(tail -$SYNC_COUNT WTM_24H_REV)" > /home/m1/WTM_24H_REV
      sed -i '/^$/d' /home/m1/WTM_24H_REV
      sleep $TIMEOUT
    fi

  else
    echo "Auto start miner set to NO"
  fi

done
